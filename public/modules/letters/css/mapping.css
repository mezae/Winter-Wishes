/**
 * For the correct positioning of the placeholder element, the dnd-list and
 * it's children must have position: relative
 */

ul {
    margin-bottom: 0;
}

ul[dnd-list], ul[dnd-list] > li { 
    position: relative;
}

/**
 * The dnd-list should always have a min-height,
 * otherwise you can't drop to it once it's empty
 */
ul[dnd-list], .reqlist {
    min-height: 42px;
    padding-left: 0;
}

.reqlist {
    margin-bottom: 10px;
}

/**
 * The dndDraggingSource class will be applied to
 * the source element of a drag operation. It makes
 * sense to hide it to give the user the feeling
 * that he's actually moving it.
 */
ul[dnd-list] .dndDraggingSource {
    display: none;
}

/**
 * An element with .dndPlaceholder class will be
 * added to the dnd-list while the user is dragging
 * over it.
 */
ul[dnd-list] .dndPlaceholder {
    display: block;
    background-color: #ddd;
    min-height: 42px;
}

/**
 * The dnd-lists's child elements currently MUST have
 * position: relative. Otherwise we can not determine
 * whether the mouse pointer is in the upper or lower
 * half of the element we are dragging over. In other
 * browsers we can use event.offsetY for this.
 */
ul[dnd-list] li, li.required {
    background-color: #fff;
    border: 1px solid #ddd;
    border-top-right-radius: 4px;
    border-top-left-radius: 4px;
    display: block;
    padding: 10px 15px;
    margin-bottom: -1px;
}

ul[dnd-list] li.csvheaders {
    border: 1px dashed #a095ff;
    border-radius: 2px;
    font-weight: bold;
    float: left;
    height: 30px;
    margin: 5px 5px 0 5px;
    padding: 5px 10px;
    text-align: center;
    width: auto;
}